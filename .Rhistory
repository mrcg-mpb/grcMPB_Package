Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
devtools::load_all(".")
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
scaleCircleSize = 0.035)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
devtools::load_all(".")
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = TRUE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
Filter_SNPs_Samples(df = FinalData,
missingnessThreshold = 0.40)
View(BarcodeData)
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
shapeFile = GMB,
LongLat_data = LongLat)
View(FinalData)
FinalData %>% filter(`Sample Internal ID` == "1
SPT102043")
FinalData %>% filter(`Sample Internal ID` == "SPT102043")
FinalData %>% filter(`Sample Internal ID` == "SPT102043") %>% View()
FinalData %>% filter(`Sample Internal ID` %in% c("SPT102043","SPT102045") %>% View()
FinalData %>% filter(`Sample Internal ID` %in% c("SPT102043","SPT102045")) %>% View()
FinalData %>% filter(`Sample Internal ID` in c("SPT102043","SPT102045")) %>% View()
FinalData %>% filter(`Sample Internal ID` %in% c("SPT102043","SPT102045")) %>% View()
FinalData %>% filter(`Sample Internal ID` %in% c("SPT102043","SPT102045")) %>% View()
devtools::load_all(".")
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
shapeFile = GMB,
LongLat_data = LongLat)
devtools::load_all(".")
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
devtools::load_all(".")
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
devtools::load_all(".")
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
DiversityMap(df = FinalData,
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 12)
Proportion_Map(df = FinalData,
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
Proportion_Map(df = FinalData,
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
devtools::load_all(".")
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = NULL,
saveOutput = FALSE)
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = Periods,
saveOutput = FALSE)
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = Periods,
saveOutput = TRUE)
devtools::load_all(".")
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = Periods,
saveOutput = TRUE)
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = NULL,
saveOutput = TRUE)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.035)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.050)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = FALSE,
time = Periods,
labelSize = 2.5,
scaleCircleSize = 0.080)
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
FinalData <-
Combine_GRC_Sheets(input_folder="C:/Users/bngwa/Documents/Brandon/GDA_Markdown/All_GRC_Reads_Gambia",
Country = "Gambia",
saveOutput = TRUE)
FinalData <-
Gene_Classifier(df = FinalData,
drug_column = "Chloroquine")
## load the shapefile for Gambia first
GMB <- st_read("C:/Users/bngwa/Documents/Brandon/GDA_Markdown/geoBoundaries-GMB-ADM3-all/geoBoundaries-GMB-ADM3-all/geoBoundaries-GMB-ADM3_simplified.shp")
## Read the logitude and latitude data
LongLat <- read_excel("C:/Users/bngwa/Documents/Brandon/GDA_Markdown/LongLat_data.xlsx")
MappingData(shapefile = GMB ,
LongLat_data = LongLat,
location_col = "Location",
long_col = "long",
lat_col = "lat" )
## You can creat a single or range of years to filter buy before generating the plots
Periods <-
list( list(name="2021", type ="year", start="2021"),
list(name="2017-19",  type= "period", start="2017",  end="2019"))
SampleCountMap(df = FinalData,
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
breaks = c(10, 100, 200, 300),
labelSize = 2.5,
scaleCircleSize = 11)
Drug_Distribution(df = FinalData,
drug_col = "Chloroquine",
saveOutput = FALSE,
time = NULL,
colors = c("Resistant" = "#525CEB",
"Mixed.Resistant" = "#808000",
"Sensitive" = "#800000") )
Drug_Distribution(df = FinalData,
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
colors = c("Resistant" = "#525CEB",
"Mixed.Resistant" = "#808000",
"Sensitive" = "#800000") )
Proportion_Map(df = FinalData,
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10)
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = TRUE,
time = Periods,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Mutation_Frequency(df = FinalData,
gene = "pfcrt",
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
include_mixed = FALSE)
Haplotype_Proportion(df = FinalData,
gene_col = "PfCRT",
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
labelSize = 2.5,
scaleCircleSize = 0.035)
Filter_SNPs_Samples(df = FinalData,
missingnessThreshold = 0.40)
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = NULL,
saveOutput = TRUE)
GenerateIBS_Data(df = FinalData,
SNP_Data = BarcodeData)
devtools::load_all(".")
GenerateIBS_Data(df = FinalData,
SNP_Data = BarcodeData)
# Assuming MeltIbsData and LongLat_data are available:
IBS_SummarisedData1 <-
IBS_DataSummary(MeltIbsData = IBS_Data$IbsMeltedMatrix %>% filter(LS1 == LS2),
LongLat_data = LongLat,
IBS_Threshold = 0.75)
# select th columns you need
IBS_SummarisedData1 <- IBS_SummarisedData1 %>% select(LS1,median_IBS,,Lat1,Long1) %>% mutate(median_IBS = round(median_IBS * 100, 1))
# Get th sample count information from the DiversityDataframe
IBS_SummarisedData1 <- IBS_SummarisedData1 %>% left_join(DiversityData %>% select(Location, Total), by = c("LS1" = "Location"))
DData <-
DiversityMap(df = FinalData,
drug_col = "Chloroquine",
SNP_Data = BarcodeData,
labelSize = 2.5,
circleNumSize = 3.1,
scaleCircleSize = 10,
time = NULL,
saveOutput = TRUE)
DData$Data
DData$Data %>% select(Location, Total)
# Get th sample count information from the DiversityDataframe
IBS_SummarisedData1 <- IBS_SummarisedData1 %>% left_join(DData$Data %>% select(Location, Total), by = c("LS1" = "Location"))
# create sf object
IBS_SummarisedData1_Sf <- st_as_sf(IBS_SummarisedData1, coords = c("Long1", "Lat1"), crs = st_crs(GMB))
IBS_SummarisedData1_Sf
IBS_SummarisedData1
shiny::runApp('inst/grcMPB_Dashboard')
Drug_Distribution(df = FinalData,
drug_col = "Chloroquine",
saveOutput = TRUE,
time = NULL,
colors = c("Resistant" = "#525CEB",
"Mixed.Resistant" = "#808000",
"Sensitive" = "#800000") )
runApp('inst/grcMPB_Dashboard')
devtools::load_all(".")
mapping_data <-
MappingData(shapefile = GMB ,
LongLat_data = LongLat,
location_col = "Location",
long_col = "long",
lat_col = "lat" )
SampleCountMap(df = FinalData,
drug_col = "Chloroquine",
mData = mapping_data,
time = NULL,
breaks = c(10, 100, 200, 300),
labelSize = 2.5,
scaleCircleSize = 11,
saveOutput = FALSE)
runApp('inst/grcMPB_Dashboard')
runApp('inst/grcMPB_Dashboard')
SampleCountMap(df = FinalData,
drug_col = "Chloroquine",
mData = mapping_data,
time = NULL,
breaks = c(10, 100, 200, 300),
labelSize = 2.5,
scaleCircleSize = 11,
saveOutput = FALSE)
samy <-
SampleCountMap(df = FinalData,
drug_col = "Chloroquine",
mData = mapping_data,
time = NULL,
breaks = c(10, 100, 200, 300),
labelSize = 2.5,
scaleCircleSize = 11,
saveOutput = FALSE)
View(samy)
samy$Plots$SampleCount_Map
samy$Plots$SampleCount_Map %>% class()
# Create a summarized bar chart data by drug type
barChartData <- df %>%
dplyr::group_by(!!rlang::sym(drug_col)) %>%
dplyr::summarise(Count = n()) %>%
dplyr::mutate(prob = round(Count / sum(Count) * 100, 2))
runApp('inst/grcMPB_Dashboard')
runApp('inst/grcMPB_Dashboard')
runApp('inst/grcMPB_Dashboard')
devtools::load_all(".")
SampleCountMap(df = FinalData,
drug_col = "Chloroquine",
mData = mapping_data,
time = NULL,
breaks = c(10, 100, 200, 300),
labelSize = 2.5,
scaleCircleSize = 11,
saveOutput = FALSE)
runApp('inst/grcMPB_Dashboard')
shiny::runApp('inst/grcMPB_Dashboard')
devtools::load_all(".")
devtools::load_all(".")
runApp('inst/grcMPB_Dashboard')
runApp('inst/grcMPB_Dashboard')
runApp('inst/grcMPB_Dashboard')
