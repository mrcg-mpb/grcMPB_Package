scale_circle_size = 10,
include_mixed = FALSE)
devtools::load_all(".")
haplotype_proportion(df = GRC_Data,
gene_col = "PfCRT",
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
sacle_piechart_size = 0.035)
barcode_data <-
filter_snp_x_samples(df = GRC_Data,
m_threshold = 0.40)
head(barcode_data)
diversity_map(df = GRC_Data,
snp_data = barcode_data,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
time = NULL,
save_output = TRUE)
IBS_Data <-
generate_ibs_data(df = GRC_Data,
snp_data = barcode_data,
drug_col = "Chloroquine")
IBS_Data$IBS_Histogram
devtools::load_all(".")
IBS_Data <-
generate_ibs_data(df = GRC_Data,
snp_data = barcode_data,
drug_col = "Chloroquine")
IBS_Data$IBS_Histogram
ibs_data_sl(melted_ibs_matrix = IBS_Data$IBS_Melted_Matrix,
ibs_th = 0.75,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
save_output = TRUE)
ibs_data_dl(melted_ibs_matrix = IBS_Data$IBS_Melted_Matrix,
ibs_threshold = 0.75,
percentage_cutoff = 1,
map_data = geo_data,
label_size = 5,
breaks = seq(1,9,2),
curve_degree = 0.5,
save_output = TRUE)
devtools::load_all(".")
devtools::load_all(".")
ibs_heat_map(df = GRC_Data,
snp_data = barcode_data,
ibs_matrix = IBS_Data$IBS_matrix,
map_data = geo_data,
save_output = TRUE,
drug_col = "Chloroquine")
pcoa_plots(ibs_matrix = IBS_Data$IBS_matrix,
df = GRC_Data,
circle_size = 4,
save_output = TRUE,
drug_col = "Chloroquine")
nj_tree(ibs_matrix = IBS_Data$IBS_matrix,
df = GRC_Data,
tippoint_size = 4,
line_size = 0.6,
save_output = TRUE,
drug_col = "Chloroquine")
devtools::load_all(".")
devtools::load_all(".")
library(grcMPB)
GRC_Data <-
combine_grc_sheets(input_folder="C:/Users/bngwa/Documents/Brandon/GDA_Markdown/All_GRC_Reads_Gambia",
country = "Gambia",
save_output = TRUE,
output_dir = "C:/Users/bngwa/Videos")
GRC_Data <-
combine_grc_sheets(input_folder="C:/Users/bngwa/Documents/Brandon/GDA_Markdown/All_GRC_Reads_Gambia",
country = "Gambia",
save_output = TRUE,
output_dir = "C:/Users/bngwa/Videos")
GRC_Data <-
gene_classifier(df = GRC_Data,
drug_column = "Chloroquine",
save_output = TRUE)
devtools::load_all(".")
GRC_Data <-
gene_classifier(df = GRC_Data,
drug_column = "Chloroquine",
save_output = TRUE)
## You can creat a single or range of years to filter buy before generating the plots
Periods <-
list(list(name="2021", type ="year", start="2021"),
list(name="2017-19",  type= "period", start="2017",  end="2019"))
sample_count_map(df = GRC_Data,
map_data = geo_data,
time = NULL,
breaks = c(10, 100, 200, 300),
label_size = 2.5,
scale_circle_size = 11,
save_output = TRUE)
# import your geographical data for maping
GMB <- st_read(system.file("extdata", "geoBoundaries-GMB-ADM3_simplified.shp", package = "grcMPB"))
LongLat <- read_excel(system.file("extdata", "LongLat_data.xlsx", package = "grcMPB"))
geo_data <-
mapping_data(shapefile = GMB ,
long_lat_data = LongLat,
location_col = "Location",
long_col = "long",
lat_col = "lat" )
## You can creat a single or range of years to filter buy before generating the plots
Periods <-
list(list(name="2021", type ="year", start="2021"),
list(name="2017-19",  type= "period", start="2017",  end="2019"))
sample_count_map(df = GRC_Data,
map_data = geo_data,
time = NULL,
breaks = c(10, 100, 200, 300),
label_size = 2.5,
scale_circle_size = 11,
save_output = TRUE)
drug_distribution(df = GRC_Data,
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
colors = c("resistant" = "#525CEB",
"mixed_resistant" = "#808000",
"sensitive" = "#800000"))
drug_distribution_pm(df = GRC_Data,
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10)
mutation_frequency(df = GRC_Data,
gene = "pfcrt",
gene_col = "PfCRT",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
include_mixed = FALSE)
haplotype_proportion(df = GRC_Data,
gene_col = "PfCRT",
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
sacle_piechart_size = 0.035)
barcode_data <-
filter_snp_x_samples(df = GRC_Data,
m_threshold = 0.40)
head(barcode_data)
diversity_map(df = GRC_Data,
snp_data = barcode_data,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
time = NULL,
save_output = TRUE)
IBS_Data <-
generate_ibs_data(df = GRC_Data,
snp_data = barcode_data,
drug_col = "Chloroquine")
IBS_Data$IBS_Histogram
ibs_data_sl(melted_ibs_matrix = IBS_Data$IBS_Melted_Matrix,
ibs_th = 0.75,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
save_output = TRUE)
ibs_data_dl(melted_ibs_matrix = IBS_Data$IBS_Melted_Matrix,
ibs_threshold = 0.75,
percentage_cutoff = 1,
map_data = geo_data,
label_size = 5,
breaks = seq(1,9,2),
curve_degree = 0.5,
save_output = TRUE)
ibs_heat_map(df = GRC_Data,
snp_data = barcode_data,
ibs_matrix = IBS_Data$IBS_matrix,
map_data = geo_data,
save_output = TRUE,
drug_col = "Chloroquine")
pcoa_plots(ibs_matrix = IBS_Data$IBS_matrix,
df = GRC_Data,
circle_size = 4,
save_output = TRUE,
drug_col = "Chloroquine")
nj_tree(ibs_matrix = IBS_Data$IBS_matrix,
df = GRC_Data,
tippoint_size = 4,
line_size = 0.6,
save_output = TRUE,
drug_col = "Chloroquine")
library(lintr)
getwd()
lint_package("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
install.packages("styler")
library(styler)
styler::style_file(getwd())
styler::style_file("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
styler::style_file("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
grc_data <-
combine_grc_sheets(
input_folder = "C:/Users/bngwa/Documents/Brandon/GDA_Markdown/All_GRC_Reads_Gambia",
country = "Gambia",
save_output = TRUE,
output_dir = "C:/Users/bngwa/Videos"
)
grc_data <-
gene_classifier(
df = grc_data,
drug_column = "Chloroquine",
save_output = TRUE
)
# import your geographical data for mapping
gmb_shpfile <- st_read(system.file("extdata", "geoBoundaries-gmb_shpfile-ADM3_simplified.shp", package = "grcMPB"))
grc_data <-
gene_classifier(
df = grc_data,
drug_column = "Chloroquine",
save_output = TRUE
)
# import your geographical data for mapping
gmb_shpfile <- st_read(system.file("extdata", "geoBoundaries-gmb_shpfile-ADM3_simplified.shp", package = "grcMPB"))
st_read(system.file("extdata", "geoBoundaries-gmb_shpfile-ADM3_simplified.shp", package = "grcMPB"))
grc_data <-
combine_grc_sheets(
input_folder = "C:/Users/bngwa/Documents/Brandon/GDA_Markdown/All_GRC_Reads_Gambia",
country = "Gambia",
save_output = TRUE,
output_dir = "C:/Users/bngwa/Videos"
)
grc_data <-
gene_classifier(
df = grc_data,
drug_column = "Chloroquine",
save_output = TRUE
)
# import your geographical data for mapping
gmb_shpfile <- st_read(system.file("extdata", "geoBoundaries-GMB-ADM3_simplified.shp", package = "grcMPB"))
longiltude_latitude <- read_excel(system.file("extdata", "longiltude_latitude_data.xlsx", package = "grcMPB"))
longiltude_latitude <- read_excel(system.file("extdata", "LongLat.xlsx", package = "grcMPB"))
read_excel(system.file("extdata", "LongLat.xlsx", package = "grcMPB"))
longitude_latitude <- read_excel(system.file("extdata", "LongLat_data.xlsx", package = "grcMPB"))
geo_data <-
mapping_data(
shapefile = gmb_shpfile,
long_lat_data = longitude_latitude,
location_col = "Location",
long_col = "long",
lat_col = "lat"
)
geo_data <-
mapping_data(
shapefile = gmb_shpfile,
long_lat_data = longitude_latitude,
location_col = "Location",
long_col = "long",
lat_col = "lat"
)
## You can creat a single or range of years to filter buy before generating the plots
periods <-
list(
list(name = "2021", type = "year", start = "2021"),
list(name = "2017-19", type = "period", start = "2017", end = "2019")
)
sample_count_map(
df = grc_data,
map_data = geo_data,
time = NULL,
breaks = c(10, 100, 200, 300),
label_size = 2.5,
scale_circle_size = 11,
save_output = TRUE
)
drug_distribution(
df = grc_data,
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
colors = c(
"resistant" = "#525CEB",
"mixed_resistant" = "#808000",
"sensitive" = "#800000"
)
)
drug_distribution_pm(
df = grc_data,
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10
)
mutation_frequency(
df = grc_data,
gene = "pfcrt",
gene_col = "PfCRT",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
include_mixed = FALSE
)
mutation_frequency(
df = grc_data,
gene = "pfcrt",
gene_col = "PfCRT",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
include_mixed = FALSE
)
haplotype_proportion(
df = grc_data,
gene_col = "PfCRT",
drug_col = "Chloroquine",
save_output = TRUE,
time = NULL,
map_data = geo_data,
label_size = 2.5,
sacle_piechart_size = 0.035
)
barcode_data <-
filter_snp_x_samples(
df = grc_data,
m_threshold = 0.40
)
head(barcode_data)
diversity_map(
df = grc_data,
snp_data = barcode_data,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
time = NULL,
save_output = TRUE
)
ibs_data_list <-
generate_ibs_data(
df = grc_data,
snp_data = barcode_data,
drug_col = "Chloroquine"
)
ibs_data_list$IBS_Histogram
ibs_data_sl(
melted_ibs_matrix = ibs_data_list$IBS_Melted_Matrix,
ibs_th = 0.75,
map_data = geo_data,
label_size = 2.5,
circle_num_size = 3.1,
scale_circle_size = 10,
save_output = TRUE
)
ibs_data_dl(
melted_ibs_matrix = ibs_data_list$IBS_Melted_Matrix,
ibs_threshold = 0.75,
percentage_cutoff = 1,
map_data = geo_data,
label_size = 5,
breaks = seq(1, 9, 2),
curve_degree = 0.5,
save_output = TRUE
)
ibs_data_dl(
melted_ibs_matrix = ibs_data_list$IBS_Melted_Matrix,
ibs_threshold = 0.75,
percentage_cutoff = 1,
map_data = geo_data,
label_size = 5,
breaks = seq(1, 9, 2),
curve_degree = 0.5,
save_output = TRUE
)
devtools::load_all(".")
ibs_data_dl(
melted_ibs_matrix = ibs_data_list$IBS_Melted_Matrix,
ibs_threshold = 0.75,
percentage_cutoff = 1,
map_data = geo_data,
label_size = 5,
breaks = seq(1, 9, 2),
curve_degree = 0.5,
save_output = TRUE
)
ibs_heat_map(
df = grc_data,
snp_data = barcode_data,
ibs_matrix = ibs_data_list$IBS_matrix,
map_data = geo_data,
save_output = TRUE,
drug_col = "Chloroquine"
)
pcoa_plots(
ibs_matrix = ibs_data_list$IBS_matrix,
df = grc_data,
circle_size = 4,
save_output = TRUE,
drug_col = "Chloroquine"
)
nj_tree(
ibs_matrix = ibs_data_list$IBS_matrix,
df = grc_data,
tippoint_size = 4,
line_size = 0.6,
save_output = TRUE,
drug_col = "Chloroquine"
)
# import your geographical data for mapping
gmb_shpfile <- st_read(system.file("extdata", "geoBoundaries-GMB-ADM3_simplified.shp", package = "grcMPB"))
longitude_latitude <- read_excel(system.file("extdata", "LongLat_data.xlsx", package = "grcMPB"))
geo_data <-
mapping_data(
shapefile = gmb_shpfile,
long_lat_data = longitude_latitude,
location_col = "Location",
long_col = "long",
lat_col = "lat"
)
nj_tree(
ibs_matrix = ibs_data_list$IBS_matrix,
df = grc_data,
tippoint_size = 4,
line_size = 0.6,
save_output = TRUE,
drug_col = "Chloroquine"
)
styler::style_file("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
lint("C:/Users/bngwa/Documents/Brandon/MPB_grcMalaria/vignettes/grcMPB_Use_Case.Rmd")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
ibs_heat_map(
df = grc_data,
snp_data = barcode_data,
ibs_matrix = ibs_data_list$IBS_matrix,
map_data = geo_data,
save_output = TRUE,
drug_col = "Chloroquine"
)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
## Create the drug condition columns
Define specific time periods to filter data when generating plots. Below is an example of a list specifying individual years and ranges.
### Generating a Sample Count Map
